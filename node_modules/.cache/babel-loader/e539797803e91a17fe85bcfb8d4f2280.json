{"ast":null,"code":"import _classCallCheck from \"/home/tshabalutzi/Dokumente/HMES/Visualizer/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/tshabalutzi/Dokumente/HMES/Visualizer/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/tshabalutzi/Dokumente/HMES/Visualizer/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/tshabalutzi/Dokumente/HMES/Visualizer/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/tshabalutzi/Dokumente/HMES/Visualizer/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/tshabalutzi/Dokumente/HMES/Visualizer/src/components/visualizer/Scene.js\";\nimport React, { Component } from \"react\";\nimport * as THREE from \"three\";\nimport OrbitControls from \"orbit-controls-es6\";\nimport GLTFLoader from 'three-gltf-loader';\n\nvar Scene =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Scene, _Component);\n\n  function Scene() {\n    _classCallCheck(this, Scene);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Scene).apply(this, arguments));\n  }\n\n  _createClass(Scene, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(\"div\", {\n        style: {\n          width: \"100vw\",\n          height: \"100vh\"\n        },\n        ref: function ref(el) {\n          return _this.container = el;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var scene = new THREE.Scene();\n      scene.background = new THREE.Color(0xffcc80); // camera\n\n      var camera = new THREE.PerspectiveCamera(50, window.innerWidth / window.innerHeight, 0.1, 2000);\n      camera.position.z = 100; // renderer\n\n      var renderer = new THREE.WebGLRenderer({\n        antialias: true\n      });\n      renderer.setSize(window.innerWidth, window.innerHeight);\n      renderer.setClearColor(0xffffff, 1.0); // controls\n\n      var controls = new OrbitControls(camera, renderer.domElement);\n      controls.enabled = true;\n      controls.maxDistance = 1500;\n      controls.minDistance = 0; //light\n\n      var light_p = new THREE.HemisphereLight(0xbbbbff, 0x444422);\n      light_p.position.set(1000, 1000, 1000);\n      scene.add(light_p);\n      light_p = new THREE.HemisphereLight(0xbbbbff, 0x444422);\n      light_p.position.set(-1000, 1000, -1000);\n      scene.add(light_p); // model\n\n      var loader = new GLTFLoader();\n      loader.load(this.props.modelLocation, function (gltf) {\n        var box = new THREE.Box3().setFromObject(gltf.scene.children[0]);\n        gltf.scene.children[0].position.x = -1 * box.getCenter().x;\n        gltf.scene.children[0].position.y = -1 * box.getCenter().y;\n        gltf.scene.children[0].position.z = -1 * box.getCenter().z;\n        scene.add(gltf.scene);\n        var size = Math.max(box.getSize().x, box.getSize().y, box.getSize().z);\n        var gridHelper = new THREE.GridHelper(size, size / 5);\n        scene.add(gridHelper);\n        var gridHelperY = new THREE.GridHelper(size, size / 5);\n        gridHelperY.rotation.x = Math.PI / 2;\n        scene.add(gridHelperY);\n        camera.position.z = box.getSize().z * 1.5;\n      }); // animate\n\n      var animate = function animate() {\n        requestAnimationFrame(animate);\n        renderer.render(scene, camera);\n      };\n\n      this.container.appendChild(renderer.domElement);\n      animate();\n    }\n  }, {\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate() {\n      return false;\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (this.props.color !== nextProps.color) {\n        this.globe.material.color.setHex(nextProps.color);\n      }\n    }\n  }]);\n\n  return Scene;\n}(Component);\n\nexport default Scene;","map":{"version":3,"sources":["/home/tshabalutzi/Dokumente/HMES/Visualizer/src/components/visualizer/Scene.js"],"names":["React","Component","THREE","OrbitControls","GLTFLoader","Scene","width","height","el","container","scene","background","Color","camera","PerspectiveCamera","window","innerWidth","innerHeight","position","z","renderer","WebGLRenderer","antialias","setSize","setClearColor","controls","domElement","enabled","maxDistance","minDistance","light_p","HemisphereLight","set","add","loader","load","props","modelLocation","gltf","box","Box3","setFromObject","children","x","getCenter","y","size","Math","max","getSize","gridHelper","GridHelper","gridHelperY","rotation","PI","animate","requestAnimationFrame","render","appendChild","nextProps","color","globe","material","setHex"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport * as THREE from \"three\";\nimport OrbitControls from \"orbit-controls-es6\";\nimport GLTFLoader from 'three-gltf-loader';\n\nclass Scene extends Component {\n  render() {\n    return (\n      <div\n        style={{\n          width: \"100vw\",\n          height: \"100vh\"\n        }}\n        ref={el => (this.container = el)}\n      />\n    );\n  }\n\n  componentDidMount() {\n    const scene = new THREE.Scene();\n    scene.background = new THREE.Color(0xffcc80);\n\n    // camera\n    const camera = new THREE.PerspectiveCamera(\n      50,\n      window.innerWidth / window.innerHeight,\n      0.1,\n      2000\n    );\n    camera.position.z = 100;\n\n    // renderer\n    const renderer = new THREE.WebGLRenderer({ antialias: true });\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    renderer.setClearColor(0xffffff, 1.0);\n\n    // controls\n    const controls = new OrbitControls(camera, renderer.domElement);\n    controls.enabled = true;\n    controls.maxDistance = 1500;\n    controls.minDistance = 0;\n\n    //light\n    let light_p = new THREE.HemisphereLight(0xbbbbff, 0x444422);\n    light_p.position.set(1000, 1000, 1000);\n    scene.add(light_p);\n\n    light_p = new THREE.HemisphereLight(0xbbbbff, 0x444422);\n    light_p.position.set(-1000, 1000, -1000);\n    scene.add(light_p);\n\n    // model\n    var loader = new GLTFLoader();\n    loader.load(this.props.modelLocation, function (gltf) {\n\n      var box = new THREE.Box3().setFromObject(gltf.scene.children[0]);\n\n      gltf.scene.children[0].position.x = -1 * box.getCenter().x;\n      gltf.scene.children[0].position.y = -1 * box.getCenter().y;\n      gltf.scene.children[0].position.z = -1 * box.getCenter().z;\n      \n      scene.add(gltf.scene);\n\n      var size = Math.max(box.getSize().x, box.getSize().y, box.getSize().z);\n      var gridHelper = new THREE.GridHelper(size, size/5);\n      scene.add(gridHelper);\n\n      var gridHelperY = new THREE.GridHelper(size, size / 5);\n      gridHelperY.rotation.x = Math.PI / 2;\n      scene.add(gridHelperY);\n\n      camera.position.z = box.getSize().z*1.5;\n    });\n    \n    // animate\n    const animate = () => {\n      requestAnimationFrame(animate);\n      renderer.render(scene, camera);\n    };\n    this.container.appendChild(renderer.domElement);\n\n    animate();\n\n  }\n\n  shouldComponentUpdate() {\n    return false;\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.color !== nextProps.color) {\n      this.globe.material.color.setHex(nextProps.color);\n    }\n  }\n}\n\nexport default Scene;\n"]},"metadata":{},"sourceType":"module"}